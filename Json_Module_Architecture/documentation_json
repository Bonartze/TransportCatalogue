Класс Node должен хранить значения одного из следующих типов:
    -int
    -double.
    -string.
    -bool.
    Векторы: using Array = std::vector<Node>;
    Словари: using Dict = std::map<std::string, Node>;
    std::nullptr_t.

Следующие методы Node сообщают, хранится ли внутри значение некоторого типа:

    bool IsInt() const;
    bool IsDouble() const; //Возвращает true, если в Node хранится int либо double.
    bool IsPureDouble() const;// Возвращает true, если в Node хранится double.
    bool IsBool() const;
    bool IsString() const;
    bool IsNull() const;
    bool IsArray() const;
    bool IsDict() const;

Ниже перечислены методы, которые возвращают хранящееся внутри Node значение заданного типа. Если внутри содержится значение другого типа, должно выбрасываться исключение std::logic_error.

    int AsInt() const;
    bool AsBool() const;
    double AsDouble() const;. Возвращает значение типа double, если внутри хранится double либо int. (используется неявное приведение типов)
    const std::string& AsString() const;
    const Array& AsArray() const;
    const Map& AsMap() const;

Объекты Node можно сравнивать между собой при помощи == и !=.